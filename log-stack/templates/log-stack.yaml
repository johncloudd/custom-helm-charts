---
apiVersion: apps/v1beta2
kind: DaemonSet
metadata:
  name: fluentd
  labels:
    app: {{ template "fluentd-elasticsearch.fullname" . }}
    version: {{ .Values.imageTag }}
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
spec:
  selector:
    matchLabels:
      name: fluentd
  template:
    metadata:
      labels:
        name: fluentd
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        checksum/config: {{ include (print $.Chart.Name "/templates/fluentd-configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ template "fluentd-elasticsearch.fullname" . }}
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
      - name: fluentd
        image:  "{{ .Values.fluentd_image }}:{{ .Values.fluentd_imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        - name: OUTPUT_HOST
          value: {{ .Values.elasticsearch.host | quote }}
        - name: ENVIRONMENT
          value: {{ .Values.environment }}
        - name: OUTPUT_PORT
          value: {{ .Values.elasticsearch.port | quote }}
        - name: OUTPUT_BUFFER_CHUNK_LIMIT
          value: {{ .Values.elasticsearch.buffer_chunk_limit | quote }}
        - name: OUTPUT_BUFFER_QUEUE_LIMIT
          value: {{ .Values.elasticsearch.buffer_queue_limit | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: libsystemddir
          mountPath: /host/lib
          readOnly: true
        - name: config-volume-{{ template "fluentd-elasticsearch.fullname" . }}
          mountPath: /etc/fluent/config.d
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      # It is needed to copy systemd library to decompress journals
      - name: libsystemddir
        hostPath:
          path: /usr/lib64
      - name: config-volume-{{ template "fluentd-elasticsearch.fullname" . }}
        configMap:
          name: {{ template "fluentd-elasticsearch.fullname" . }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
{{- end }}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: logstash
  labels:
    app: {{ template "logstash.name" . }}
spec:
  replicas: {{ .Values.logstash_replicaCount }}
  template:
    metadata:
      labels:
        app: logstash
        release: {{ .Release.Name }}
      {{- if .Values.logstash_podLabels }}
        # Allows custom labels to be specified
        {{- range $key, $val := .Values.logstash_podLabels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
      {{- end }}
      annotations:
      {{- if .Values.logstash_podAnnotations }}
        # Allows custom annotations to be specified
        {{- range $key, $val := .Values.logstash_podAnnotations }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
      {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.logstash_image.logstash_repository }}:{{ .Values.logstash_image.logstash_tag }}"
          imagePullPolicy: {{ .Values.logstash_image.logstash_pullPolicy }}
          ports:
    {{- range $port := .Values.logstash_service.logstash_ports }}
            - name: {{ $port.serviceName }}
              containerPort: {{ $port.containerPort }}
              protocol: {{ $port.protocol }}
    {{- end }}
          env:
            - name: ELASTICSEARCH_HOST
              value: {{ .Values.logstash_elasticsearch.logstash_host | quote }}
            - name: ELASTICSEARCH_PORT
              value: {{ .Values.logstash_elasticsearch.logstash_port | quote }}
            - name: SYSLOG_PORT
              value: {{ .Values.logstash_service.logstash_internalPort | quote }}
          volumeMounts:
            - name: config
              mountPath: /usr/share/logstash/config/logstash.yml
              subPath: logstash.yml
            - name: pipeline
              mountPath: /usr/share/logstash/pipeline
            - name: patterns
              mountPath: /usr/share/logstash/patterns
          resources:
{{ toYaml .Values.logstash_resources | indent 12 }}
      volumes:
        - name: config
          configMap:
            name: logstash-configmap
        - name: pipeline
          configMap:
            name: {{ template "logstash.fullname" . }}-pipeline
        - name: patterns
          configMap:
            name: {{ template "logstash.fullname" . }}-patterns
      nodeSelector:
        cluster-type: default
